{"version":3,"sources":["components/Shop/Products.js"],"names":["Products","setCurrentPage","currentPage","pageEnd","useParams","cat","subcat","dispatch","useDispatch","useState","showLoadMore","setShowLoadMore","firstLoaded","setFirstLoaded","allProducts","useSelector","state","shop","shownProducts","categories","findSubCatCount","subCatIdx","subCategories","findIndex","name","count","existingProducts","reduce","total","subCategory","includes","console","log","useEffect","setTimeout","changeProductsFilterOptions","target","value","className","map","product","_id","activeCat","filter","category","totalProducts","length","isThereMoreProduct","onClick"],"mappings":"4OAQe,SAASA,EAAT,GAA6D,IAAzCC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QAE/D,EAAsBC,cAAhBC,EAAN,EAAMA,IAAKC,EAAX,EAAWA,OAEJC,EAAWC,cAEjB,EAAuCC,oBAAS,GAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAqCF,oBAAS,GAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,eAChDI,EAAgBH,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,iBAClDC,EAAaJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKE,cA+B/CC,EAAkB,WAEtB,IAAMC,EAAYF,EAAW,GAAGG,cAAcC,WAAW,qBAAGC,OAAoBlB,KACxEmB,EAAUN,EAAW,GAAGG,cAAcD,GAAtCI,MAEFC,EAAmBZ,EAAYa,QAAQ,SAACC,EAAD,YAAUC,YAA8BC,SAASxB,GAAUsB,IAAUA,IAAO,GAIzH,OAFAG,QAAQC,IAAKN,GAENA,EAAmBD,GAiC5B,OA1BAQ,qBAAW,WAETC,YAAW,WACTvB,GAAgB,KACf,KAECC,EAGAL,EADED,EACO6B,YAA4B,CACnCC,OAAQ,MACRC,MAAO,CAAChC,EAAIC,KAGL6B,YAA4B,CACnCC,OAAQ,MACRC,MAAO,CAAChC,MAKZQ,GAAe,KAGjB,CAACR,EAAIC,IAGL,qBAAKgC,UAAU,6CAAf,SACE,sBAAKA,UAAU,MAAf,UAGIpB,GACEA,EAAcqB,KAAI,SAACC,GAAD,OAAa,cAAC,IAAD,CAAaA,QAASA,GAAcA,EAAQC,QAK7E/B,IAAiBP,GAlFE,WAEzB,GAAIE,GAAOC,EAAS,CAElB,GAAIA,EACF,OAAOc,IAGP,IAAMsB,EAAYvB,EAAWwB,QAAQ,qBAAGnB,OAAoBnB,KAAM,GAE5DqB,EAAmBZ,EAAYa,QAAQ,SAACC,EAAD,YAAUgB,SAAwBd,SAASzB,GAAOuB,EAAQ,EAAIA,IAAO,GAElH,QAAIc,GAEKhB,EAAmBgB,EAAUjB,MAQxC,IAAMoB,EAAgB1B,EAAW2B,QAAU3B,EAAWQ,QAAO,SAACC,EAAD,UAAsBA,EAAtB,EAAUH,QAA2B,GAElG,OAAIX,EAAYgC,OAASD,EA0DOE,IAC5B,qBAAKT,UAAU,mBAAf,SAEE,wBAAQA,UAAU,yBAAyBU,QA5C3B,WACxB/C,EAAgBC,EAAc,IA2CtB","file":"static/js/17.538cea30.chunk.js","sourcesContent":["import React, { useEffect, useState, Suspense } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { changeProductsFilterOptions } from \"../../store/Reducer/reducer\";\r\n\r\nimport ProductCard from '../Product/ProductCard/ProductCard'\r\nimport \"./products.scss\";\r\n\r\nexport default function Products({ setCurrentPage, currentPage, pageEnd }) {\r\n\r\n\tlet { cat, subcat } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showLoadMore,setShowLoadMore] = useState(false)\r\n  const [firstLoaded,setFirstLoaded] = useState(false)\r\n\r\n  const allProducts = useSelector((state) => state.shop.allProducts);\r\n  const shownProducts = useSelector((state) => state.shop.shownProducts);\r\n  const categories = useSelector((state) => state.shop.categories);\r\n\r\n  const isThereMoreProduct = () => {\r\n\r\n    if( cat || subcat ) {\r\n\r\n      if( subcat ) {\r\n        return findSubCatCount()\r\n      } else {\r\n\r\n        const activeCat = categories.filter( ({ name }) => name === cat )[0]\r\n\r\n        const existingProducts = allProducts.reduce( (total, { category }) => category.includes(cat) ? total + 1 : total, 0 )\r\n\r\n        if( activeCat ) {\r\n          \r\n          return existingProducts < activeCat.count\r\n        }\r\n\r\n        return false\r\n        \r\n      }\r\n\r\n    } else {\r\n      const totalProducts = categories.length && categories.reduce((total, { count }) => total + count, 0)\r\n\r\n      if( allProducts.length < totalProducts ) return true\r\n      else return false\r\n    }\r\n  }\r\n\r\n  const findSubCatCount = () => {\r\n\r\n    const subCatIdx = categories[0].subCategories.findIndex( ({ name }) => name === subcat )\r\n    const { count } = categories[0].subCategories[subCatIdx]\r\n\r\n    const existingProducts = allProducts.reduce( (total, { subCategory }) => subCategory.includes(subcat) ? total++ : total, 0 )\r\n\r\n    console.log( existingProducts )\r\n\r\n    return existingProducts < count\r\n  }\r\n\r\n  const fetchMoreProducts = () => {\r\n    setCurrentPage( currentPage + 1 )\r\n  }\r\n\r\n  useEffect( () => {\r\n\r\n    setTimeout(() => {\r\n      setShowLoadMore(true)\r\n    }, 700);\r\n\r\n    if( firstLoaded ) {\r\n\r\n      if( subcat ){\r\n        dispatch(changeProductsFilterOptions({\r\n          target: 'cat',\r\n          value: [cat,subcat]\r\n        }))\r\n      } else {\r\n        dispatch(changeProductsFilterOptions({\r\n          target: 'cat',\r\n          value: [cat]\r\n        }))\r\n      }\r\n\r\n    } else {\r\n      setFirstLoaded(true)\r\n    }\r\n\r\n  },[cat,subcat])\r\n\r\n  return (\r\n    <div className=\"col-sm-12 col-md-12 col-lg-9 products-wrap\">\r\n      <div className=\"row\">\r\n\r\n        {\r\n          shownProducts &&\r\n            shownProducts.map((product) => <ProductCard product={product} key={product._id} />\r\n             )\r\n        }\r\n\r\n        {\r\n          showLoadMore && !pageEnd && isThereMoreProduct() &&\r\n          <div className=\"load-more-holder\">\r\n\r\n            <button className=\"load-more-products-btn\" onClick={fetchMoreProducts} >Load More</button>\r\n\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}