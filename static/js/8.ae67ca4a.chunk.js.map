{"version":3,"sources":["utils/range.js","components/Product/Review/NewComment.js","components/Product/Review/Comment.js","components/Product/Review/Review.js","components/Product/ProductDetails.js"],"names":["range","from","to","arr","i","push","NewComment","product_id","replyTo","toggleReplyFor","useState","currStar","setCurrStar","name","setName","setNameErr","comment","setComment","setCommentErr","user","useSelector","state","shop","submitReview","a","toast","error","checkReviewFields","newReview","text","user_id","_id","rate","img","post","process","createdReview","success","message","length","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","map","star","idx","onSubmit","e","preventDefault","type","id","placeholder","value","onChange","target","rows","Comment","created_at","isReply","replyFor","src","alt","fillRule","clipRule","targetDate","baseDate","Date","month","getMonth","day","getDate","year","getFullYear","convertDateToNow","Review","showTab","reviews","setReplyFor","allNoReplyReviews","filter","rev","review","replyRev","ProductDetails","setShowTab","singleProduct","description","properties","additionalInfo","changeTab","role","content","title","items","item"],"mappings":"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","file":"static/js/8.ae67ca4a.chunk.js","sourcesContent":["export const range = ( from, to ) => {\n\n\tconst arr = []\n\n\tfor ( let i = from; i <= to; i++ ) {\n\t\tarr.push(i)\n\t}\n\n\treturn arr\n\t\n}","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { toast } from \"react-toastify\";\nimport { post } from \"../../../utils/fetch\";\nimport { range } from '../../../utils/range'\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport default function NewComment({ product_id, replyTo, toggleReplyFor }) {\n\n  const [currStar, setCurrStar] = useState(5);\n\n  const [name, setName] = useState(\"\");\n  const [nameErr, setNameErr] = useState(\"\");\n\n  const [comment, setComment] = useState(\"\");\n  const [commentErr, setCommentErr] = useState(\"\");\n\n  const user = useSelector((state) => state.shop.user);\n\n  const submitReview = async () => {\n    setNameErr(\"\");\n    setCommentErr(\"\");\n\n    if (!user) {\n      toast.error(\"You must login to post a review\");\n      return;\n    }\n\n    if (!checkReviewFields()) {\n      toast.error(\n        \"Validation for review failed. Please provide required fields\"\n      );\n      return;\n    }\n\n    const newReview = {\n      name,\n      text: comment,\n      user_id: user._id,\n      product_id,\n      rate: currStar,\n    };\n\n    if( replyTo ) newReview.replyTo = replyTo\n\n    if (user.img) newReview.img = user.img;\n\n    const createdReview = await post(`${apiUrl}/api/review`, newReview);\n\n    if (createdReview.success) {\n      toast.success(\n        \"Your review has successfuly submitted and its under confirmation from admin.\"\n      );\n      setName(\"\");\n      setComment(\"\");\n    } else {\n      if (\n        createdReview.message === \"User Already has a review on this product.\"\n      )\n        toast.error(\"You already have a review on this product.\");\n      else toast.error(\"Some Error occured during submitting your review.\");\n    }\n\n    if( replyTo ) toggleReplyFor(replyTo)\n  };\n\n  const checkReviewFields = () => {\n    let checks = true;\n\n    if (name.length < 3) setNameErr(\"\");\n\n    if (comment.length < 3) setCommentErr(\"You must provide a comment\");\n\n    return checks;\n  };\n\n  return (\n    <>\n      <div className={`form--review-rating text-center ${ replyTo ? 'new-reply' : ''}`} >\n\n        { replyTo &&\n            <svg onClick={ () => toggleReplyFor(replyTo) } xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 close-reply\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n        }\n        \n        {\n          replyTo ?\n            <h5>Add Reply</h5>\n          :\n            <h5>Add Your Review</h5>\n\n        }\n\n        {\n          !replyTo &&\n            <div className=\"form--review-rating-content\">\n              <span>Your Ratting</span>\n\n              {range(1, 5).map((star) => (\n                <div\n                  className=\"product--rating\"\n                  onClick={() => setCurrStar(star)}\n                  key={star}\n                >\n                  {range(1, star).map((idx) => (\n                    <i\n                      key={idx}\n                      className={`fa fa-star ${currStar === star ? \"active\" : \"\"}`}\n                    ></i>\n                  ))}\n                </div>\n              ))}\n            </div>\n        }\n      </div>\n\n      <div className={`form--review ${ replyTo ? 'new-reply' : ''}`}>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-12 col-lg-12\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                placeholder=\"Enter your name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n\n            <div className=\"col-sm-12 col-md-12 col-lg-12\">\n              <textarea\n                className=\"form-control\"\n                id=\"review\"\n                rows=\"2\"\n                placeholder=\"Comment review\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n              ></textarea>\n            </div>\n\n            <div\n              className=\"\n                    col-sm-12 col-md-12 col-lg-12\n                    text--center\n                  \"\n            >\n              <button\n                className=\"btn btn--primary btn--rounded new-review-btn\"\n                onClick={submitReview}\n                type=\"button\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { range } from \"../../../utils/range\";\nimport NewComment from './NewComment'\n\nexport default function Comment({\n  _id,\n  text,\n  img,\n  name,\n  rate,\n  created_at,\n  product_id,\n  isReply,\n  toggleReplyFor,\n  replyFor\n}) {\n\n  const convertDateToNow = (targetDate) => {\n    const baseDate = new Date(targetDate);\n\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    const month = baseDate.getMonth();\n    const day = baseDate.getDate();\n    const year = baseDate.getFullYear();\n\n    return `${months[month]} ${day}th, ${year}`;\n  };\n\n  return (\n    <div className={`comment-wrapper ${ isReply ? 'reply-comment': '' }`}>\n\n      <div className={`author--img ${ isReply ? 'reply-comment': ''}`}>\n        {img ? (\n          <img src={img} alt={name} />\n        ) : (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        )}\n      </div>\n\n      <div className={`review--comment-content ${ isReply ? 'reply-comment': ''}`}>\n        <div className=\"comment-top-info\">\n          <div className=\"pull-left\">\n            <h6>{name}</h6>\n            <span className=\"review--date\">{convertDateToNow(created_at)}</span>\n          </div>\n\n          {\n            !isReply &&\n              <div className=\"pull-right product--rating\">\n                {range(1, rate).map((star, idx) => (\n                  <i className=\"fa fa-star active\" key={idx}></i>\n                ))}\n              </div>\n          }\n        </div>\n\n        <div className=\"product--comment\">\n          <p>{text}</p>\n        </div>\n\n        {\n          !isReply && replyFor !== _id &&\n            <button className=\"reply\" onClick={() => toggleReplyFor(_id)}>\n              reply\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M17 8l4 4m0 0l-4 4m4-4H3\"\n                />\n              </svg>\n            </button>\n        }\n      </div>\n\n      { !isReply && replyFor === _id && \n          <NewComment replyTo={replyFor} toggleReplyFor={toggleReplyFor} product_id={product_id} />\n      }\n    </div>\n  );\n}\n","import React, { useState } from 'react'\n\nimport NewComment from './NewComment'\nimport Comment from './Comment'\n\nimport './review.scss'\n\nexport default function Review({ showTab, reviews, product_id }) {\n\n  const [replyFor,setReplyFor] = useState('')\n\n  const allNoReplyReviews = reviews.filter( rev => {\n    if( !rev.replyTo ) return true\n    if( !rev.replyTo.length ) return true\n    return false\n  })\n\n  const allReplyReviews = (id) => reviews.filter( rev => rev.replyTo && rev.replyTo === id )\n\n  const toggleReplyFor = async (id) => {\n\n    if( replyFor === id ) setReplyFor('')\n    else setReplyFor(id)\n\n  }\n\n  return (\n    <div  className={`tab-pane fade ${ showTab === 2 ? 'show active' : '' }`} id=\"reviews\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md-12 col-lg-8 offset-lg-2\">\n\n        { reviews.length ? \n\n            <ul className=\"product--review-comments list-unstyled\">\n              \n              { \n                allNoReplyReviews.map( (review,idx) => {\n\n                  const { _id } = review\n\n                  return (\n                    <li className=\"review--comment\" key={idx}>\n                      \n                      <Comment { ...review } replyFor={replyFor} toggleReplyFor={toggleReplyFor} product_id={product_id} />\n\n                      {\n                        allReplyReviews(_id).map( (replyRev,idx) => <Comment key={idx} { ...replyRev } isReply={true} />)\n                      }\n                    </li>\n                  )\n                })\n              }\n\n            </ul>          \n          : \n            <div className=\"no-comment\">\n              No Comments for this product\n            </div>\n        }\n        \n        \n        \n        <NewComment product_id={product_id} />\n      \n      </div>\n    </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport './productDetails.scss'\nimport { useSelector } from \"react-redux\";\n\nimport Review from './Review/Review'\n\nimport { Markup } from 'interweave';\n\nexport default function ProductDetails() {\n\n\tconst [showTab, setShowTab] = useState(0)\n\n\tconst { _id, description, properties, additionalInfo, reviews } = useSelector((state) => state.shop.singleProduct);\n\n  // const dispatch = useDispatch();\n\n\tconst changeTab = (idx) => {\n\t\tif( showTab !== idx ) setShowTab(idx)\n\t}\n\n  const allNoReplyReviews = () => reviews.filter( rev => {\n    if( !rev.replyTo ) return true\n    if( !rev.replyTo.length ) return true\n    return false\n  }).length\n\n  return (\n\t\t_id ?\n    <section\n      id=\"product-detalis2\"\n      className=\"product-detalis product-detalis-2 pb-80\"\n    >\n      <div className=\"container details-cont\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-md-12 col-lg-10 offset-lg-1\">\n\n            <div className=\"product--tabs tabs\">\n\n              {/* Nav tabs  */}\n              <ul className=\"nav nav-tabs\" role=\"tablist\">\n                <li>\n                  <button\n                    className={ showTab === 0 ? 'active' : ''}\n\t\t\t\t\t\t\t\t\t\tonClick={ () => changeTab(0) }\n                  >\n                    description\n                  </button>\n                </li>\n                <li>\n                  <button\n\t\t\t\t\t\t\t\t\t\tclassName={ showTab === 1 ? 'active' : ''}\n\t\t\t\t\t\t\t\t\t\tonClick={ () => changeTab(1) }\n                  >\n                    Addtional info\n                  </button>\n                </li>\n                <li>\n                  <button\n\t\t\t\t\t\t\t\t\t\tclassName={ showTab === 2 ? 'active' : ''}\n\t\t\t\t\t\t\t\t\t\tonClick={ () => changeTab(2) }\n                  >\n                    reviews({allNoReplyReviews()})\n                  </button>\n                </li>\n              </ul>\n\n              {/* Tab panes  */}\n              <div className=\"tab-content\">\n\n                <div\n                  className={`tab-pane fade ${ showTab === 0 ? 'show active' : '' }`}\n                  id=\"description\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-12 col-lg-10 offset-lg-1\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-12 col-md-12 col-lg-8\">\n                          <div className=\"product--desc\">\n                            <p>\n                              \n                              <Markup\n                                content={ description }\n                              />\n\n                            </p>\n                          </div>\n                        </div>\n\n                        {\n                          properties.length > 0 &&\n                            <div className=\"col-sm-12 col-md-12 col-lg-4\">\n\n                              {\n                                properties.map( ({ title, items }) => \n                                  <div className=\"product--desc-list\" key={title}>\n                                    <h6>{ title }</h6>\n                                    <ul className=\"list-unstyled mb-0\">\n                                      {\n                                        items.map( (item,idx) => \n                                          <li key={idx} >{ item }</li>\n                                        )\n                                      }\n                                    </ul>\n                                  </div>\n                                )\n                              }\n\n                            </div>\n                        }\n                        {/* .col-lg-8 end  */}\n                      </div>\n                    </div>\n                  </div>\n                  {/* .row end  */}\n                </div>\n                {/* #description end  */}\n\n                <div\n                  className={`tab-pane fade ${ showTab === 1 ? 'show active' : '' }`}\n                  id=\"addtional-info\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-12 col-lg-10 offset-lg-1\">\n                      <div className=\"product--desc\">\n\n                        {\n                          additionalInfo ?\n                          <p>\n                            <Markup\n                              content={ additionalInfo }\n                            />\n                          </p>\n                          :\n                            'No additional info for this product.'\n                        }\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* #details end  */}\n\n                <Review showTab={showTab} reviews={reviews} product_id={_id} />\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\t\t:\n\t\tnull\n\t);\n}\n"],"sourceRoot":""}